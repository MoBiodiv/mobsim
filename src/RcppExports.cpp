// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// sSAC1_C
NumericVector sSAC1_C(NumericVector x, NumericVector y, IntegerVector id_spec);
RcppExport SEXP _mobsim_sSAC1_C(SEXP xSEXP, SEXP ySEXP, SEXP id_specSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id_spec(id_specSEXP);
    rcpp_result_gen = Rcpp::wrap(sSAC1_C(x, y, id_spec));
    return rcpp_result_gen;
END_RCPP
}
// rThomas_rcpp
DataFrame rThomas_rcpp(int n_points, int n_mother_points, NumericVector xmother, NumericVector ymother, double sigma, double xmin, double xmax, double ymin, double ymax);
RcppExport SEXP _mobsim_rThomas_rcpp(SEXP n_pointsSEXP, SEXP n_mother_pointsSEXP, SEXP xmotherSEXP, SEXP ymotherSEXP, SEXP sigmaSEXP, SEXP xminSEXP, SEXP xmaxSEXP, SEXP yminSEXP, SEXP ymaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_points(n_pointsSEXP);
    Rcpp::traits::input_parameter< int >::type n_mother_points(n_mother_pointsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xmother(xmotherSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ymother(ymotherSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type xmin(xminSEXP);
    Rcpp::traits::input_parameter< double >::type xmax(xmaxSEXP);
    Rcpp::traits::input_parameter< double >::type ymin(yminSEXP);
    Rcpp::traits::input_parameter< double >::type ymax(ymaxSEXP);
    rcpp_result_gen = Rcpp::wrap(rThomas_rcpp(n_points, n_mother_points, xmother, ymother, sigma, xmin, xmax, ymin, ymax));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mobsim_sSAC1_C", (DL_FUNC) &_mobsim_sSAC1_C, 3},
    {"_mobsim_rThomas_rcpp", (DL_FUNC) &_mobsim_rThomas_rcpp, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_mobsim(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
